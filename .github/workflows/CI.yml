name: Mobile-like E2E (Mocha + Playwright)

on:
  push:
    branches: [ main ]        # rode em cada commit no main
  pull_request:               # e tambÃ©m em PRs

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    # 1) CÃ³digo do repositÃ³rio
    - uses: actions/checkout@v4

    # 2) Node + cache automÃ¡tico de ~/.npm
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'

    # 3) DependÃªncias (inclui playwright e mocha)
    - name: Install deps
      run: npm ci

    # 4) Instala navegadores e libs de SO necessÃ¡rias ao Playwright
    - name: Instala navegadores Playwright
      run: npx playwright install --with-deps
      # Essa action executa internamente:
      #   npx playwright install --with-deps
      # e resolve permissÃµes/CORS/callbacks

    # 5) Executa o Mocha
    #    --reporter mochawesome gera reports/mochawesome.html
    - name: Run Mocha tests with Playwright
      run: |
        npx mocha "tests/**/*.spec.js" \
          --reporter mochawesome \
          --reporter-options reportDir=reports,reportFilename=index,html=true

    # 6) Publica o relatÃ³rio como artefato
    - name: Upload mochawesome report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: mochawesome-report
        path: reports/           # conterÃ¡ index.html + assets

    # 7) Resumo curto na UI do job
    - name: Summary
      if: always()
      run: |
        echo "### ðŸ§ª Mocha + Playwright finalizado" >> $GITHUB_STEP_SUMMARY
        echo "- Total de testes: verifique o artefato **mochawesome-report**" >> $GITHUB_STEP_SUMMARY